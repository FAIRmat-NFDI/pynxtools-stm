name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
      - '*' # Run on all pushes, but only publish on tags

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .

    - name: Git tag version
      id: git_tag_version
      run: |
        # Extract the version from the tag (e.g., 'v1.0.0' becomes '1.0.0')
        GIT_TAG_VERSION=${GITHUB_REF#refs/tags/v}
        echo "GIT_TAG_VERSION=$GIT_TAG_VERSION" >> $GITHUB_ENV
        echo "Version from Git tag: $ GIT_TAG_VERSION"

    - name: Package version
      id: package_version
      run: |
        PACKAGE_VERSION=$(python setup.py --version)
        echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
        echo "Version from setup.py: $PACKAGE_VERSION"

    - name: Citation version
      id: citation_version
      run: |
        # Parse the version from the CITATION.cff file (using grep or similar)
        CITATION_VERSION=$(grep '^cff-version:' CITATION.cff | cut -d' ' -f2)
        echo "CITATION_VERSION=$CITATION_VERSION" >> $GITHUB_ENV
        echo "Version from CITATION.cff: $CITATION_VERSION"

    - name: Compare versions
      run: |
        if [ "$ GIT_TAG_VERSION" != "$ PACKAGE_VERSION" ]; then
          echo "Version mismatch: Git tag version is $ GIT_TAG_VERSION, setup.py version is $ PACKAGE_VERSION"
          exit 1
        fi
        if [ "$ GIT_TAG_VERSION" != "$ CITATION_VERSION" ]; then
          echo "Version mismatch: Git tag version is $ GIT_TAG_VERSION, CITATION.cff version is $ CITATION_VERSION"
          exit 1
        fi
        if [ "$ PACKAGE_VERSION" != "$ CITATION_VERSION" ]; then
          echo "Version mismatch: setup.py version is $ PACKAGE_VERSION, CITATION.cff version is $ CITATION_VERSION"
          exit 1
        fi
        echo "All versions match: $ GIT_TAG_VERSION"

